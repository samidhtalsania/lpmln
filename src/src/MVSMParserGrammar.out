State 0:
          start ::= * prog
          prog ::= * prog SORTS sortdecl
          prog ::= * prog OBJECTS objectdecl
          prog ::= * prog CONSTANTS constantdecl
          prog ::= * prog NEWLINE predicate
          prog ::= * predicate
          prog ::= * prog NEWLINE rule
          prog ::= * rule
          prog ::= * prog NEWLINE
     (23) prog ::= *
          rule ::= * REVERSE_IMPLICATION body DOT
          rule ::= * number REVERSE_IMPLICATION body
          rule ::= * head DISJUNCTION bodydef DOT
          rule ::= * number head DISJUNCTION bodydef
          rule ::= * head REVERSE_IMPLICATION body DOT
          rule ::= * number head REVERSE_IMPLICATION body
          rule ::= * number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          rule ::= * LPAREN head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= * literal DOT
          predicate ::= * number literal
          predicate ::= * number NEGATION NEGATION literal
          predicate ::= * number NEGATION literal
          predicate ::= * NEGATION NEGATION literal DOT
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

           REVERSE_IMPLICATION shift        10     
                        LPAREN shift        4      
                      LBRACKET shift        72     
                      NEGATION shift        18     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                         start accept
                          prog shift        41     
                     predicate shift-reduce 19     prog ::= predicate
                        string shift        42     
                          rule shift-reduce 21     prog ::= rule
                       bodydef shift-reduce 34     head ::= bodydef
                          head shift        46     
                        number shift        2      
                       literal shift        64     
                      variable shift-reduce 45     literal ::= variable
                     {default} reduce       23     prog ::=

State 1:
          prog ::= prog NEWLINE * predicate
          prog ::= prog NEWLINE * rule
     (22) prog ::= prog NEWLINE *
          rule ::= * REVERSE_IMPLICATION body DOT
          rule ::= * number REVERSE_IMPLICATION body
          rule ::= * head DISJUNCTION bodydef DOT
          rule ::= * number head DISJUNCTION bodydef
          rule ::= * head REVERSE_IMPLICATION body DOT
          rule ::= * number head REVERSE_IMPLICATION body
          rule ::= * number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          rule ::= * LPAREN head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= * literal DOT
          predicate ::= * number literal
          predicate ::= * number NEGATION NEGATION literal
          predicate ::= * number NEGATION literal
          predicate ::= * NEGATION NEGATION literal DOT
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

           REVERSE_IMPLICATION shift        10     
                        LPAREN shift        4      
                      LBRACKET shift        72     
                      NEGATION shift        18     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     predicate shift-reduce 18     prog ::= prog NEWLINE predicate
                        string shift        42     
                          rule shift-reduce 20     prog ::= prog NEWLINE rule
                       bodydef shift-reduce 34     head ::= bodydef
                          head shift        46     
                        number shift        2      
                       literal shift        64     
                      variable shift-reduce 45     literal ::= variable
                     {default} reduce       22     prog ::= prog NEWLINE

State 2:
          rule ::= number * REVERSE_IMPLICATION body
          rule ::= number * head DISJUNCTION bodydef
          rule ::= number * head REVERSE_IMPLICATION body
          rule ::= number * NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= number * literal
          predicate ::= number * NEGATION NEGATION literal
          predicate ::= number * NEGATION literal
          variable ::= * string
          variable ::= * number
     (54) variable ::= number *
          string ::= * STRING
          number ::= * NUMBER

           REVERSE_IMPLICATION shift        9      
           REVERSE_IMPLICATION reduce       54      ** Parsing conflict **
                      LBRACKET shift        72     
                      NEGATION shift        20     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift-reduce 34     head ::= bodydef
                          head shift        53     
                        number shift-reduce 54     variable ::= number
                       literal shift        47     
                      variable shift-reduce 45     literal ::= variable
                     {default} reduce       54     variable ::= number

State 3:
          rule ::= LPAREN head RPAREN REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        43     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 4:
          rule ::= LPAREN * head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift-reduce 34     head ::= bodydef
                          head shift        44     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 5:
          rule ::= head REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        45     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 6:
          rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION * body RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        50     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 7:
          rule ::= number NEGATION NEGATION LBRACKET * head REVERSE_IMPLICATION body RBRACKET
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift-reduce 34     head ::= bodydef
                          head shift        51     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 8:
          rule ::= number head REVERSE_IMPLICATION * body
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        67     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 9:
          rule ::= number REVERSE_IMPLICATION * body
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        68     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 10:
          rule ::= REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                          body shift        56     
                       bodydef shift-reduce 35     body ::= bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 11:
          objectdecl ::= * object SEMI_COLON objectdecl
          objectdecl ::= * object DOT
          objectdecl ::= * NEWLINE objectdecl
          objectdecl ::= NEWLINE * objectdecl
          object ::= * variables COLON COLON string
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                       NEWLINE shift        11     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     variables shift        60     
                        string shift-reduce 53     variable ::= string
                    objectdecl shift-reduce 8      objectdecl ::= NEWLINE objectdecl
                        object shift        61     
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 51     variables ::= variable

State 12:
          objectdecl ::= * object SEMI_COLON objectdecl
          objectdecl ::= object SEMI_COLON * objectdecl
          objectdecl ::= * object DOT
          objectdecl ::= * NEWLINE objectdecl
          object ::= * variables COLON COLON string
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                       NEWLINE shift        11     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     variables shift        60     
                        string shift-reduce 53     variable ::= string
                    objectdecl shift-reduce 6      objectdecl ::= object SEMI_COLON objectdecl
                        object shift        61     
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 51     variables ::= variable

State 13:
          prog ::= prog OBJECTS * objectdecl
          objectdecl ::= * object SEMI_COLON objectdecl
          objectdecl ::= * object DOT
          objectdecl ::= * NEWLINE objectdecl
          object ::= * variables COLON COLON string
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                       NEWLINE shift        11     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     variables shift        60     
                        string shift-reduce 53     variable ::= string
                    objectdecl shift-reduce 5      prog ::= prog OBJECTS objectdecl
                        object shift        61     
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 51     variables ::= variable

State 14:
          rule ::= head DISJUNCTION * bodydef DOT
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift        66     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 15:
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift-reduce 33     head ::= head DISJUNCTION bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 16:
          rule ::= number head DISJUNCTION * bodydef
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift        52     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 17:
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * literal
          bodydef ::= * NEGATION literal
          bodydef ::= * NEGATION NEGATION literal
          bodydef ::= * LBRACKET NEGATION NEGATION literal RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * NEGATION string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        72     
                      NEGATION shift        21     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        42     
                       bodydef shift-reduce 32     body ::= body CONJUNCTION bodydef
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 36     bodydef ::= literal
                      variable shift-reduce 45     literal ::= variable

State 18:
          bodydef ::= NEGATION * literal
          bodydef ::= NEGATION * NEGATION literal
          bodydef ::= NEGATION * string EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= NEGATION * NEGATION literal DOT
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      NEGATION shift        22     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        54     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 37     bodydef ::= NEGATION literal
                      variable shift-reduce 45     literal ::= variable

State 19:
          rule ::= number NEGATION NEGATION * LBRACKET head REVERSE_IMPLICATION body RBRACKET
          bodydef ::= NEGATION NEGATION * literal
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= number NEGATION NEGATION * literal
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      LBRACKET shift        7      
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        74     
                        number shift-reduce 54     variable ::= number
                       literal shift        49     
                      variable shift-reduce 45     literal ::= variable

State 20:
          rule ::= number NEGATION * NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          bodydef ::= NEGATION * literal
          bodydef ::= NEGATION * NEGATION literal
          bodydef ::= NEGATION * string EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= number NEGATION * NEGATION literal
          predicate ::= number NEGATION * literal
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      NEGATION shift        19     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        54     
                        number shift-reduce 54     variable ::= number
                       literal shift        48     
                      variable shift-reduce 45     literal ::= variable

State 21:
          bodydef ::= NEGATION * literal
          bodydef ::= NEGATION * NEGATION literal
          bodydef ::= NEGATION * string EQUAL string
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                      NEGATION shift        25     
                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        54     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 37     bodydef ::= NEGATION literal
                      variable shift-reduce 45     literal ::= variable

State 22:
          bodydef ::= NEGATION NEGATION * literal
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          predicate ::= NEGATION NEGATION * literal DOT
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        74     
                        number shift-reduce 54     variable ::= number
                       literal shift        63     
                      variable shift-reduce 45     literal ::= variable

State 23:
          bodydef ::= LBRACKET NEGATION NEGATION * literal RBRACKET
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        74     
                        number shift-reduce 54     variable ::= number
                       literal shift        70     
                      variable shift-reduce 45     literal ::= variable

State 24:
          literal ::= string LBRACKET * variables RBRACKET EQUAL variable
          literal ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     variables shift        55     
                        string shift-reduce 53     variable ::= string
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 51     variables ::= variable

State 25:
          bodydef ::= NEGATION NEGATION * literal
          literal ::= * string LBRACKET variables RBRACKET EQUAL variable
          literal ::= * string LBRACKET variables RBRACKET
          literal ::= * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift        74     
                        number shift-reduce 54     variable ::= number
                       literal shift-reduce 38     bodydef ::= NEGATION NEGATION literal
                      variable shift-reduce 45     literal ::= variable

State 26:
          constant ::= string LBRACKET * variables RBRACKET COLON COLON string
          constant ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                     variables shift        57     
                        string shift-reduce 53     variable ::= string
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 51     variables ::= variable

State 27:
          literal ::= string LBRACKET variables RBRACKET EQUAL * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift-reduce 53     variable ::= string
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 43     literal ::= string LBRACKET variables RBRACKET EQUAL variable

State 28:
          constantdecl ::= * constant SEMI_COLON constantdecl
          constantdecl ::= * constant DOT
          constantdecl ::= * NEWLINE constantdecl
          constantdecl ::= NEWLINE * constantdecl
          constant ::= * string LBRACKET variables RBRACKET COLON COLON string
          constant ::= * string LBRACKET variables RBRACKET
          constant ::= * string
          constant ::= * string COLON COLON string
          string ::= * STRING

                       NEWLINE shift        28     
                        STRING shift-reduce 55     string ::= STRING
                        string shift        58     
                  constantdecl shift-reduce 13     constantdecl ::= NEWLINE constantdecl
                      constant shift        59     

State 29:
          constantdecl ::= * constant SEMI_COLON constantdecl
          constantdecl ::= constant SEMI_COLON * constantdecl
          constantdecl ::= * constant DOT
          constantdecl ::= * NEWLINE constantdecl
          constant ::= * string LBRACKET variables RBRACKET COLON COLON string
          constant ::= * string LBRACKET variables RBRACKET
          constant ::= * string
          constant ::= * string COLON COLON string
          string ::= * STRING

                       NEWLINE shift        28     
                        STRING shift-reduce 55     string ::= STRING
                        string shift        58     
                  constantdecl shift-reduce 11     constantdecl ::= constant SEMI_COLON constantdecl
                      constant shift        59     

State 30:
          prog ::= prog CONSTANTS * constantdecl
          constantdecl ::= * constant SEMI_COLON constantdecl
          constantdecl ::= * constant DOT
          constantdecl ::= * NEWLINE constantdecl
          constant ::= * string LBRACKET variables RBRACKET COLON COLON string
          constant ::= * string LBRACKET variables RBRACKET
          constant ::= * string
          constant ::= * string COLON COLON string
          string ::= * STRING

                       NEWLINE shift        28     
                        STRING shift-reduce 55     string ::= STRING
                        string shift        58     
                  constantdecl shift-reduce 10     prog ::= prog CONSTANTS constantdecl
                      constant shift        59     

State 31:
          variables ::= variables COMMA * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER

                        STRING shift-reduce 55     string ::= STRING
                        NUMBER shift-reduce 56     number ::= NUMBER
                        string shift-reduce 53     variable ::= string
                        number shift-reduce 54     variable ::= number
                      variable shift-reduce 52     variables ::= variables COMMA variable

State 32:
          sortdecl ::= * string SEMI_COLON sortdecl
          sortdecl ::= * NEWLINE sortdecl
          sortdecl ::= NEWLINE * sortdecl
          sortdecl ::= * string DOT
          string ::= * STRING

                       NEWLINE shift        32     
                        STRING shift-reduce 55     string ::= STRING
                      sortdecl shift-reduce 3      sortdecl ::= NEWLINE sortdecl
                        string shift        62     

State 33:
          sortdecl ::= * string SEMI_COLON sortdecl
          sortdecl ::= string SEMI_COLON * sortdecl
          sortdecl ::= * NEWLINE sortdecl
          sortdecl ::= * string DOT
          string ::= * STRING

                       NEWLINE shift        32     
                        STRING shift-reduce 55     string ::= STRING
                      sortdecl shift-reduce 2      sortdecl ::= string SEMI_COLON sortdecl
                        string shift        62     

State 34:
          prog ::= prog SORTS * sortdecl
          sortdecl ::= * string SEMI_COLON sortdecl
          sortdecl ::= * NEWLINE sortdecl
          sortdecl ::= * string DOT
          string ::= * STRING

                       NEWLINE shift        32     
                        STRING shift-reduce 55     string ::= STRING
                      sortdecl shift-reduce 1      prog ::= prog SORTS sortdecl
                        string shift        62     

State 35:
          bodydef ::= string NEGATION EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 42     bodydef ::= string NEGATION EQUAL string

State 36:
          bodydef ::= string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 40     bodydef ::= string EQUAL string

State 37:
          bodydef ::= NEGATION string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 41     bodydef ::= NEGATION string EQUAL string

State 38:
          constant ::= string COLON COLON * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 17     constant ::= string COLON COLON string

State 39:
          constant ::= string LBRACKET variables RBRACKET COLON COLON * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 14     constant ::= string LBRACKET variables RBRACKET COLON COLON string

State 40:
          object ::= variables COLON COLON * string
          string ::= * STRING

                        STRING shift-reduce 55     string ::= STRING
                        string shift-reduce 9      object ::= variables COLON COLON string

State 41:
      (0) start ::= prog *
          prog ::= prog * SORTS sortdecl
          prog ::= prog * OBJECTS objectdecl
          prog ::= prog * CONSTANTS constantdecl
          prog ::= prog * NEWLINE predicate
          prog ::= prog * NEWLINE rule
          prog ::= prog * NEWLINE

                             $ reduce       0      start ::= prog
                       NEWLINE shift        1      
                         SORTS shift        34     
                       OBJECTS shift        13     
                     CONSTANTS shift        30     

State 42:
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          literal ::= string * LBRACKET variables RBRACKET EQUAL variable
          literal ::= string * LBRACKET variables RBRACKET
     (53) variable ::= string *

                         EQUAL shift        36     
                      LBRACKET shift        24     
                      NEGATION shift        69     
                     {default} reduce       53     variable ::= string

State 43:
          rule ::= LPAREN head RPAREN REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                           DOT shift-reduce 31     rule ::= LPAREN head RPAREN REVERSE_IMPLICATION body DOT

State 44:
          rule ::= LPAREN head * RPAREN REVERSE_IMPLICATION body DOT
          head ::= head * DISJUNCTION bodydef

                        RPAREN shift        65     
                   DISJUNCTION shift        15     

State 45:
          rule ::= head REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                           DOT shift-reduce 28     rule ::= head REVERSE_IMPLICATION body DOT

State 46:
          rule ::= head * DISJUNCTION bodydef DOT
          rule ::= head * REVERSE_IMPLICATION body DOT
          head ::= head * DISJUNCTION bodydef

           REVERSE_IMPLICATION shift        5      
                   DISJUNCTION shift        14     

State 47:
     (36) bodydef ::= literal *
     (47) predicate ::= number literal *

           REVERSE_IMPLICATION reduce       36     bodydef ::= literal
                   DISJUNCTION reduce       36     bodydef ::= literal
                     {default} reduce       47     predicate ::= number literal

State 48:
     (37) bodydef ::= NEGATION literal *
     (49) predicate ::= number NEGATION literal *

           REVERSE_IMPLICATION reduce       37     bodydef ::= NEGATION literal
                   DISJUNCTION reduce       37     bodydef ::= NEGATION literal
                     {default} reduce       49     predicate ::= number NEGATION literal

State 49:
     (38) bodydef ::= NEGATION NEGATION literal *
     (48) predicate ::= number NEGATION NEGATION literal *

           REVERSE_IMPLICATION reduce       38     bodydef ::= NEGATION NEGATION literal
                   DISJUNCTION reduce       38     bodydef ::= NEGATION NEGATION literal
                     {default} reduce       48     predicate ::= number NEGATION NEGATION literal

State 50:
          rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body * RBRACKET
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                      RBRACKET shift-reduce 30     rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET

State 51:
          rule ::= number NEGATION NEGATION LBRACKET head * REVERSE_IMPLICATION body RBRACKET
          head ::= head * DISJUNCTION bodydef

           REVERSE_IMPLICATION shift        6      
                   DISJUNCTION shift        15     

State 52:
     (27) rule ::= number head DISJUNCTION bodydef *
     (33) head ::= head DISJUNCTION bodydef *

           REVERSE_IMPLICATION reduce       33     head ::= head DISJUNCTION bodydef
                   DISJUNCTION reduce       33     head ::= head DISJUNCTION bodydef
                     {default} reduce       27     rule ::= number head DISJUNCTION bodydef

State 53:
          rule ::= number head * DISJUNCTION bodydef
          rule ::= number head * REVERSE_IMPLICATION body
          head ::= head * DISJUNCTION bodydef

           REVERSE_IMPLICATION shift        8      
                   DISJUNCTION shift        16     

State 54:
          bodydef ::= NEGATION string * EQUAL string
          literal ::= string * LBRACKET variables RBRACKET EQUAL variable
          literal ::= string * LBRACKET variables RBRACKET
     (53) variable ::= string *

                         EQUAL shift        37     
                      LBRACKET shift        24     
                     {default} reduce       53     variable ::= string

State 55:
          literal ::= string LBRACKET variables * RBRACKET EQUAL variable
          literal ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        31     
                      RBRACKET shift        73     

State 56:
          rule ::= REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                           DOT shift-reduce 24     rule ::= REVERSE_IMPLICATION body DOT

State 57:
          constant ::= string LBRACKET variables * RBRACKET COLON COLON string
          constant ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        31     
                      RBRACKET shift        77     

State 58:
          constant ::= string * LBRACKET variables RBRACKET COLON COLON string
          constant ::= string * LBRACKET variables RBRACKET
     (16) constant ::= string *
          constant ::= string * COLON COLON string

                      LBRACKET shift        26     
                         COLON shift        75     
                     {default} reduce       16     constant ::= string

State 59:
          constantdecl ::= constant * SEMI_COLON constantdecl
          constantdecl ::= constant * DOT

                    SEMI_COLON shift        29     
                           DOT shift-reduce 12     constantdecl ::= constant DOT

State 60:
          object ::= variables * COLON COLON string
          variables ::= variables * COMMA variable

                         COMMA shift        31     
                         COLON shift        78     

State 61:
          objectdecl ::= object * SEMI_COLON objectdecl
          objectdecl ::= object * DOT

                    SEMI_COLON shift        12     
                           DOT shift-reduce 7      objectdecl ::= object DOT

State 62:
          sortdecl ::= string * SEMI_COLON sortdecl
          sortdecl ::= string * DOT

                    SEMI_COLON shift        33     
                           DOT shift-reduce 4      sortdecl ::= string DOT

State 63:
     (38) bodydef ::= NEGATION NEGATION literal *
          predicate ::= NEGATION NEGATION literal * DOT

                           DOT shift-reduce 50     predicate ::= NEGATION NEGATION literal DOT
                     {default} reduce       38     bodydef ::= NEGATION NEGATION literal

State 64:
     (36) bodydef ::= literal *
          predicate ::= literal * DOT

                           DOT shift-reduce 46     predicate ::= literal DOT
                     {default} reduce       36     bodydef ::= literal

State 65:
          rule ::= LPAREN head RPAREN * REVERSE_IMPLICATION body DOT

           REVERSE_IMPLICATION shift        3      

State 66:
          rule ::= head DISJUNCTION bodydef * DOT
     (33) head ::= head DISJUNCTION bodydef *

                           DOT shift-reduce 26     rule ::= head DISJUNCTION bodydef DOT
                     {default} reduce       33     head ::= head DISJUNCTION bodydef

State 67:
     (29) rule ::= number head REVERSE_IMPLICATION body *
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                     {default} reduce       29     rule ::= number head REVERSE_IMPLICATION body

State 68:
     (25) rule ::= number REVERSE_IMPLICATION body *
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        17     
                     {default} reduce       25     rule ::= number REVERSE_IMPLICATION body

State 69:
          bodydef ::= string NEGATION * EQUAL string

                         EQUAL shift        35     

State 70:
          bodydef ::= LBRACKET NEGATION NEGATION literal * RBRACKET

                      RBRACKET shift-reduce 39     bodydef ::= LBRACKET NEGATION NEGATION literal RBRACKET

State 71:
          bodydef ::= LBRACKET NEGATION * NEGATION literal RBRACKET

                      NEGATION shift        23     

State 72:
          bodydef ::= LBRACKET * NEGATION NEGATION literal RBRACKET

                      NEGATION shift        71     

State 73:
          literal ::= string LBRACKET variables RBRACKET * EQUAL variable
     (44) literal ::= string LBRACKET variables RBRACKET *

                         EQUAL shift        27     
                     {default} reduce       44     literal ::= string LBRACKET variables RBRACKET

State 74:
          literal ::= string * LBRACKET variables RBRACKET EQUAL variable
          literal ::= string * LBRACKET variables RBRACKET
     (53) variable ::= string *

                      LBRACKET shift        24     
                     {default} reduce       53     variable ::= string

State 75:
          constant ::= string COLON * COLON string

                         COLON shift        38     

State 76:
          constant ::= string LBRACKET variables RBRACKET COLON * COLON string

                         COLON shift        39     

State 77:
          constant ::= string LBRACKET variables RBRACKET * COLON COLON string
     (15) constant ::= string LBRACKET variables RBRACKET *

                         COLON shift        76     
                     {default} reduce       15     constant ::= string LBRACKET variables RBRACKET

State 78:
          object ::= variables COLON * COLON string

                         COLON shift        40     

----------------------------------------------------
Symbols:
    0: $:
    1: REVERSE_IMPLICATION
    2: EQUAL
    3: COMMA
    4: LPAREN
    5: RPAREN
    6: NEWLINE
    7: CONJUNCTION
    8: DISJUNCTION
    9: LBRACKET
   10: RBRACKET
   11: IMPLICATION
   12: SORTS
   13: NEGATION
   14: WS
   15: SEMI_COLON
   16: DOT
   17: OBJECTS
   18: COLON
   19: CONSTANTS
   20: STRING
   21: NUMBER
   22: error:
   23: start: <lambda> REVERSE_IMPLICATION LPAREN NEWLINE LBRACKET SORTS NEGATION OBJECTS CONSTANTS STRING NUMBER
   24: prog: <lambda> REVERSE_IMPLICATION LPAREN NEWLINE LBRACKET SORTS NEGATION OBJECTS CONSTANTS STRING NUMBER
   25: predicate: NEGATION STRING NUMBER
   26: decl:
   27: variables: STRING NUMBER
   28: sortdecl: NEWLINE STRING
   29: string: STRING
   30: objectdecl: NEWLINE STRING NUMBER
   31: object: STRING NUMBER
   32: constantdecl: NEWLINE STRING
   33: constant: STRING
   34: rule: REVERSE_IMPLICATION LPAREN LBRACKET NEGATION STRING NUMBER
   35: body: LBRACKET NEGATION STRING NUMBER
   36: bodydef: LBRACKET NEGATION STRING NUMBER
   37: bodydef2:
   38: head: LBRACKET NEGATION STRING NUMBER
   39: number: NUMBER
   40: literal: STRING NUMBER
   41: variable: STRING NUMBER
